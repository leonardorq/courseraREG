#Graficar el histograma
library(UsingR); data(galton); library(reshape2); long<-melt(galton)
g<-ggplot(long, aes(x=value, fill=variable))
g<-g + geom_histogram(colour="black", binwidth = 1)
g<- g + facet_grid(.~variable)
g


#Para hacer interactivo la mediana
#No salió
install.packages("manipulate")
library(manipulate)
myHist<-function(mu){
  mse<-mean((galton$child-mu)^2)
  g<-ggplot(galton, aes(x=child)) + geom_histogram(fill="salmon", colour="black", binwidth = 1)
  g<-g + geom_vline(xintercept=mu, size=3)
  g<-g+ggtitle(paste("mu= ",mu,",MSE= ", round(mse,2), sep=""))
}
manipulate(myHist(mu), mu=slider(62,74,step=0.5))


#Gráfica de la mediana
g<-ggplot(galton, aes(x=child))+ geom_histogram(fill="salmon", colour="black", binwidth=1)
g<-g+ geom_vline(xintercept = mean(galton$child),size=3)
g


#comparando las alturas de los hijos y los padres
ggplot(galton, aes(x=parent, y=child))+geom_point()

#para una mejor comparación
#Primero obtenemos una tabla de frecuencias
install.packages("dplyr")
library(dplyr)
freqData<-as.data.frame(table(galton$child,galton$parent))
names(freqData)<-c("child","parent","freq")
freqData$child<-as.numeric(as.character(freqData$child))
freqData$parent<-as.numeric(as.character(freqData$parent))

#gráfica de las frecuencias
g<-ggplot(filter(freqData,freq>0),aes(x=parent,y=child))
g<- g+ scale_size(range=c(2,20), guide="none")
g<-g + geom_point(colour="grey50", aes(size=freq+20, show_guide=FALSE))
g<- g+ geom_point(aes(colour=freq, size= freq))
g<- g + scale_color_gradient(low="lightblue",high="white")
g


#Regresión desde el origen
y<-galton$child - mean(galton$child)
x<-galton$parent - mean(galton$parent)
freqData<-as.data.frame(table(x,y))
names(freqData)<-c("child","parent","freq")
freqData$child<-as.numeric(as.character(freqData$child))
freqData$parent<-as.numeric(as.character(freqData$parent))
myPlot<-function(beta){
  g<- ggplot(filter(freqData,freq>0), aes(x=parent, y=child))
  g<- g+ scale_size(range=c(2,20),guide="none")
  g<- g+ geom_point(colour="grey50", aes(size= freq+20, show_guide= FALSE))
  g<- g+ geom_point(aes(colour=freq, size=freq))
  g<- g+ scale_colour_gradient(low="lightblue", high="white")
  g<- g+ geom_abline(intercept=0, slope=beta, size=3)
  mse<-mean((y-beta*x)^2)
  g<- g+ ggtitle(paste("beta= ",beta, "mse= ", round(mse,3)))
  g
}
library(manipulate)
library(ggplot2)
manipulate(myPlot(beta), beta= slider(0.6,1.2,step=0.02))


#La recta de regresión que mejor se ajusta, estará dada por:
lm(I(child-mean(child))~I(parent-mean(parent))-1,data= galton)
#El beta que buscamos es 0.6463

#gráfica con la línea de regresión
g<- ggplot(filter(freqData,freq>0), aes(x=parent, y=child))
g<- g+ scale_size(range=c(2,20),guide="none")
g<- g+ geom_point(colour="grey50", aes(size= freq+20, show_guide= FALSE))
g<- g+ geom_point(aes(colour=freq, size=freq))
g<- g+ scale_colour_gradient(low="lightblue", high="white")
lm1<-lm(galton$child~galton$parent)
g<- g+ geom_abline(intercept=coef(lm1)[2],size=3,colour="black")
g
